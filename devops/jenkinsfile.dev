pipeline {
    agent any

    // global properties
    // - DING_TALK_ENTRYPOINT
    // - PYPI_REGISTRY

    environment {
        
        // 在北京龙归科技有限公司这个钉钉群的机器人
        DINGTALK_ROBOT = "51e1b446-ccde-44f5-aad0-8303e4967d39"
        GIT_SHORT_COMMIT = """${sh(
            returnStdout: true,
            script: 'git rev-parse --short HEAD',
        ).trim()}"""
        DOCKER_IMAGE_BUILD_VERSION = "build-${env.BUILD_NUMBER}-${env.GIT_SHORT_COMMIT}"
        DOCKER_IMAGE_DEV_VERSION = "v2dev-${env.BUILD_NUMBER}-${env.GIT_SHORT_COMMIT}"

        DOCKER_DEV_REGISTRY="https://harbor.longguikeji.com"
        DOCKER_DEV_REGISTRY_CREDENTIAL="devops-longguikeji-harbor"

        // DOCKER_PROD_REGISTRY="https://index.docker.io/v1/"
        // DOCKER_PROD_REGISTRY_CREDENTIAL="devops-longguikeji-dockerhub"
        K8S_HOST = "https://kubernetes"
        K8S_CREDENTIAL = "lg-k8s-dev"
        K8S_NS = "arkidv2-dev"
        // deployment、statefulset、daemonset
        K8S_DEPLOY_KIND = "deploy"
        K8S_DEPLOY_NAME = "arkid-fe"
        K8S_DEPLOY_CONTAINER_NAME = "arkid-fe"
    }
    stages {
        // stage('pre') {
        //     steps {
        //         sendDingTalk("pending", "开始构建")
        //         // replacePyPIRegistry()
        //     }
        // }
        stage('build') {
            steps {
                withDockerRegistry([credentialsId: "${DOCKER_DEV_REGISTRY_CREDENTIAL}", url: "${DOCKER_DEV_REGISTRY}"]){
                    sh """#!/bin/bash
                        docker build -t harbor.longguikeji.com/ark-releases/arkid-fe:${env.DOCKER_IMAGE_DEV_VERSION} .
                        docker push harbor.longguikeji.com/ark-releases/arkid-fe:${env.DOCKER_IMAGE_DEV_VERSION}
                    """
                }
            }
        }
        // stage('update dev k8s environment') {
        //     steps{
        //         withKubeConfig([credentialsId: "${env.K8S_CREDENTIAL}",
        //                         serverUrl: "${K8S_HOST}",
        //                         namespace: "${env.K8S_NS}"
        //                         ]) {
        //                             sh """
        //                                 kubectl set image ${env.K8S_DEPLOY_KIND} ${env.K8S_DEPLOY_NAME} ${env.K8S_DEPLOY_CONTAINER_NAME}=harbor.longguikeji.com/ark-releases/arkid:${env.DOCKER_IMAGE_DEV_VERSION} --record=true
        //                             """
        //         }
        //     }
        // }
    }
    // post {
    //     success {
    //         sendDingTalk("success", "构建成功")
    //     }
    //     failure {
    //         sendDingTalk("failure", "构建失败")
    //     }
    // }
}

// def replacePyPIRegistry(){
//     hostname = sh (
//         returnStdout: true,
//         script: "python -c \"from urlparse import urlparse;print urlparse('${env.PYPI_REGISTRY}').hostname\" ",
//     ).trim()
//     sh """
//     cat > devops/pip.conf << EOF
// [global]
// index-url = ${env.PYPI_REGISTRY}
// trusted-host = ${hostname}
// EOF
//     """
// }

// def sendDingTalk(status, message) {
//     if (status == "success") {
//         img="https://s2.ax1x.com/2019/10/17/KEFSWd.png"
//     } else if (status == "failure") {
//         img="https://s2.ax1x.com/2019/10/17/KEFCQI.png"
//     } else if (status == "pending") {
//         img="https://s2.ax1x.com/2019/10/17/KEFkef.gif"
//     } else {
//         img=""
//     }

//     dingtalk (
//         //all
//         robot: "${env.DINGTALK_ROBOT}",
//         type: 'LINK',
//         at: ["18031108921"],
//         atAll: false,

//         //LINK
//         title: "${env.IMAGE_NAME}-${env.GIT_TAG}",
//         text: [message],
//         messageUrl: "${env.BUILD_URL}",
//         picUrl: img,

//         //整体跳转
//         //singleTitle: '',
//         //btns: [],
//         //btnLayout: '',
//         //hideAvatar: false
//     )
// }
